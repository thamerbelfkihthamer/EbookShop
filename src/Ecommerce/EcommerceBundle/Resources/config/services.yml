parameters:
#    ecommerce.example.class: Ecommerce\EcommerceBundle\Example

services:
    gedmo.listener.blameable:
        class: Gedmo\Blameable\BlameableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
        
    gedmo.listener.tree:
        class: Gedmo\Tree\TreeListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]

    gedmo.listener.translatable:
        class: Gedmo\Translatable\TranslatableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
            - [ setDefaultLocale, [ %locale% ] ]
            - [ setTranslationFallback, [ false ] ]

    gedmo.listener.timestampable:
        class: Gedmo\Timestampable\TimestampableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]

    gedmo.listener.sluggable:
        class: Gedmo\Sluggable\SluggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]

    gedmo.listener.sortable:
        class: Gedmo\Sortable\SortableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]

    gedmo.listener.loggable:
        class: Gedmo\Loggable\LoggableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
            
    gedmo.listener.softdeleteable:
        class: Gedmo\SoftDeleteable\SoftDeleteableListener
        tags:
            - { name: doctrine.event_subscriber, connection: default }
        calls:
            - [ setAnnotationReader, [ @annotation_reader ] ]
  
    setNewFacture:
      class: Ecommerce\EcommerceBundle\Services\GetFacture
      arguments: [@service_container]
  
    setNewReference:
      class: Ecommerce\EcommerceBundle\Services\GetReference
      arguments: [@security.context, @doctrine.orm.entity_manager]
    
    tva:
      class: Ecommerce\EcommerceBundle\Twig\Extension\TvaExtension
      tags:
        - { name: twig.extension }

    montantTva:
      class: Ecommerce\EcommerceBundle\Twig\Extension\MontantTvaExtension
      tags:
        - { name: twig.extension }

    redirectionListener:
      class: Ecommerce\EcommerceBundle\Listener\RedirectionListener
      arguments: [@service_container,@session]
      tags:
        - { name: kernel.event_listener, event: kernel.request, method: onKernelRequest }